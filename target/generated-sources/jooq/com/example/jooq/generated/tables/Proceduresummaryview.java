/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables;


import com.example.jooq.generated.Keys;
import com.example.jooq.generated.Public;
import com.example.jooq.generated.tables.records.ProceduresummaryviewRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Proceduresummaryview extends TableImpl<ProceduresummaryviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.proceduresummaryview</code>
     */
    public static final Proceduresummaryview PROCEDURESUMMARYVIEW = new Proceduresummaryview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProceduresummaryviewRecord> getRecordType() {
        return ProceduresummaryviewRecord.class;
    }

    /**
     * The column
     * <code>public.proceduresummaryview.proceduresummaryviewid</code>.
     */
    public final TableField<ProceduresummaryviewRecord, Integer> PROCEDURESUMMARYVIEWID = createField(DSL.name("proceduresummaryviewid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.proceduresummaryview.sessionid</code>.
     */
    public final TableField<ProceduresummaryviewRecord, Long> SESSIONID = createField(DSL.name("sessionid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.proceduresummaryview.procedureid</code>.
     */
    public final TableField<ProceduresummaryviewRecord, Long> PROCEDUREID = createField(DSL.name("procedureid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.proceduresummaryview.name</code>.
     */
    public final TableField<ProceduresummaryviewRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>public.proceduresummaryview.datatype</code>.
     */
    public final TableField<ProceduresummaryviewRecord, String> DATATYPE = createField(DSL.name("datatype"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.proceduresummaryview.scalardatastring</code>.
     */
    public final TableField<ProceduresummaryviewRecord, String> SCALARDATASTRING = createField(DSL.name("scalardatastring"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.proceduresummaryview.timestamp</code>.
     */
    public final TableField<ProceduresummaryviewRecord, LocalDateTime> TIMESTAMP = createField(DSL.name("timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    private Proceduresummaryview(Name alias, Table<ProceduresummaryviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private Proceduresummaryview(Name alias, Table<ProceduresummaryviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.proceduresummaryview</code> table
     * reference
     */
    public Proceduresummaryview(String alias) {
        this(DSL.name(alias), PROCEDURESUMMARYVIEW);
    }

    /**
     * Create an aliased <code>public.proceduresummaryview</code> table
     * reference
     */
    public Proceduresummaryview(Name alias) {
        this(alias, PROCEDURESUMMARYVIEW);
    }

    /**
     * Create a <code>public.proceduresummaryview</code> table reference
     */
    public Proceduresummaryview() {
        this(DSL.name("proceduresummaryview"), null);
    }

    public <O extends Record> Proceduresummaryview(Table<O> child, ForeignKey<O, ProceduresummaryviewRecord> key) {
        super(child, key, PROCEDURESUMMARYVIEW);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ProceduresummaryviewRecord, Integer> getIdentity() {
        return (Identity<ProceduresummaryviewRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ProceduresummaryviewRecord> getPrimaryKey() {
        return Keys.PROCEDURESUMMARYVIEW_PKEY;
    }

    @Override
    public Proceduresummaryview as(String alias) {
        return new Proceduresummaryview(DSL.name(alias), this);
    }

    @Override
    public Proceduresummaryview as(Name alias) {
        return new Proceduresummaryview(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Proceduresummaryview rename(String name) {
        return new Proceduresummaryview(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Proceduresummaryview rename(Name name) {
        return new Proceduresummaryview(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Long, Long, String, String, String, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
